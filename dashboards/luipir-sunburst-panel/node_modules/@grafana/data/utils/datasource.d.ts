/// <reference types="react" />
import { DataSourcePluginOptionsEditorProps, SelectableValue, KeyValue, DataSourceSettings } from '../types';
export declare const onUpdateDatasourceOption: (props: DataSourcePluginOptionsEditorProps<import("../types").DataSourceJsonData, {}>, key: "type" | "name" | "id" | "orgId" | "typeLogoUrl" | "access" | "url" | "password" | "user" | "database" | "basicAuth" | "basicAuthPassword" | "basicAuthUser" | "isDefault" | "jsonData" | "secureJsonData" | "secureJsonFields" | "readOnly" | "withCredentials" | "version") => (event: import("react").SyntheticEvent<HTMLInputElement | HTMLSelectElement, Event>) => void;
export declare const onUpdateDatasourceJsonDataOption: <J, S, K extends keyof J>(props: DataSourcePluginOptionsEditorProps<J, S>, key: K) => (event: import("react").SyntheticEvent<HTMLInputElement | HTMLSelectElement, Event>) => void;
export declare const onUpdateDatasourceSecureJsonDataOption: <J, S extends {} = KeyValue<any>>(props: DataSourcePluginOptionsEditorProps<J, S>, key: string) => (event: import("react").SyntheticEvent<HTMLInputElement | HTMLSelectElement, Event>) => void;
export declare const onUpdateDatasourceJsonDataOptionSelect: <J, S, K extends keyof J>(props: DataSourcePluginOptionsEditorProps<J, S>, key: K) => (selected: SelectableValue<any>) => void;
export declare const onUpdateDatasourceJsonDataOptionChecked: <J, S, K extends keyof J>(props: DataSourcePluginOptionsEditorProps<J, S>, key: K) => (event: import("react").SyntheticEvent<HTMLInputElement, Event>) => void;
export declare const onUpdateDatasourceSecureJsonDataOptionSelect: <J, S extends {} = KeyValue<any>>(props: DataSourcePluginOptionsEditorProps<J, S>, key: string) => (selected: SelectableValue<any>) => void;
export declare const onUpdateDatasourceResetOption: (props: DataSourcePluginOptionsEditorProps<import("../types").DataSourceJsonData, {}>, key: string) => (event: import("react").MouseEvent<HTMLButtonElement, MouseEvent>) => void;
export declare function updateDatasourcePluginOption(props: DataSourcePluginOptionsEditorProps, key: keyof DataSourceSettings, val: any): void;
export declare const updateDatasourcePluginJsonDataOption: <J, S, K extends keyof J>(props: DataSourcePluginOptionsEditorProps<J, S>, key: K, val: any) => void;
export declare const updateDatasourcePluginSecureJsonDataOption: <J, S extends {} = KeyValue<any>>(props: DataSourcePluginOptionsEditorProps<J, S>, key: string, val: any) => void;
export declare const updateDatasourcePluginResetOption: <J, S extends {} = KeyValue<any>>(props: DataSourcePluginOptionsEditorProps<import("../types").DataSourceJsonData, {}>, key: string) => void;
