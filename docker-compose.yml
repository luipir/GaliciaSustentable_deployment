# docker-compose build
version: '2.1'
volumes:
  # dbbackups:
  postgis-data:
  grafana-data:

services:

  db:
    image: kartoza/postgis:12.1
    volumes:
      - ./postgis-data:/var/lib/postgresql
      # - dbbackups:/backups
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - ALLOW_IP_RANGE=0.0.0.0/0
      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
      # - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster
    ports:
      - 55432:5432
    restart: on-failure
    healthcheck:
      test: "exit 0"

  # dbbackups:
  #   image: kartoza/pg-backup:12.0
  #   hostname: pg-backups
  #   volumes:
  #     - dbbackups:/backups
  #   links:
  #     - db:db
  #   environment:
  #     - DUMPPREFIX=PG_db
  #     - POSTGRES_USER=docker
  #     - POSTGRES_PASS=docker
  #     - POSTGRES_PORT=5432
  #     - POSTGRES_HOST=db
  #     - POSTGRES_DBNAME=gis
  #   restart: on-failure
  #   depends_on:
  #     db:
  #       condition: service_healthy

  grafana:
    image: grafana/grafana:7.0.1
    container_name: grafana_galiciasustentable
    ports:
      - "3000:3000"
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,briangann-gauge-panel,natel-plotly-panel,grafana-simple-json-datasource
    user: "0"
    links:
      - db
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/grafana/data; chown 472:472 /srv/docker/grafana/data
      - ./grafana-data:/var/lib/grafana
    restart: on-failure
    healthcheck:
      test: "exit 0"
